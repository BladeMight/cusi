#!/bin/bash
ver="1.24"
bsym="\s\=\_\-\+x"
osym="$bsym\(\[\{"
csym="$bsym\)\]\}"
fqsid="(^|[$osym])"
fqeid="([$csym]|$)"
fqdef="$fqsid\$i$fqeid"
dbg=0
zp=0
cmode=0
fc=0
myvi=""
if [[ "$1" == "--debug" ]]; then dbg=1; shift; fi
if [[ "$1" == "--zero" ]]; then zp=1; shift; fi
if [[ "$1" == "--cache" ]]; then cmode=1; shift; fi
if [[ "$1" == "--force-cache" ]]; then fc=1; cmode=1; shift; fi
if [[ "$1" == "--myvi" ]]; then myvi="$1"; shift; fi
if [[ "$1" == "" ]]; then
  echo "     cusq by BladeMight, v$ver"
  echo "$0 <*Debug> <*ZeroPrefix> <*Cache> <Query> <*Loop-Max> <*Loop-Start> <*Max-Results> <*Filter-Query> <*Max-Pages>"
  echo "  * - optional flag"
  echo "  <Debug>        - If first argument is \"--debug\", script will debug info."
  echo "  <ZeroPrefix>   - If first argument is \"--zero\", script will force zero-prefix(otherwise it will automatically will be used when needed)."
  echo "  <Cache>        - If first argument is \"--cache\", script will try to get results faster by loading less pages."
  echo "  <ForceCache>        - If first argument is \"--force-cache\", script will try to get results faster by loading less pages using ONLY the cache mode."
  echo "  <Myvi>        - If first argument is \"--myvi\", script will pass --myvi to cuss."
  echo "  <Query>        - Query to search for."
  echo "  <Loop-Max>     - Ending point of loop, default: 1."
  echo "  <Loop-Start>   - Starting point of loop, default: 1"
  echo "  <Max-Results>  - Maximum results per each query, default: 1, to display only: -1 links, -2 names."
  echo "  <Filter-Query> - Custom filter query, default: $fqdef, \$i=loop index"
  echo "Example:"
  echo "  $0 \"Banana Fish Anidub\" 5 5"
  exit 0
fi
dw() {
  [[ $dbg -eq 1 ]] && echo -e "$1"
}
SU="\e[33mSuccess!\e[0m"
FA="\e[31mFailed.\e[0m"
fq="$fqdef"
que="$1"
lma=1
lst=1
pma=5
mar=1
if [[ "$2" != "" ]]; then lma="$2"; fi
if [[ "$3" != "" ]]; then lst="$3"; fi
if [[ "$4" != "" ]]; then mar="$4"; fi
if [[ "$5" != "" ]]; then fq="$5"; fi
if [[ "$6" != "" ]]; then pma="$6"; fi
if [[ $lst -gt $lma ]]; then
  dw "\e[32mSwapping\e[0m the \e[33mLoop-Max\e[0m and \e[34mLoop-Start\e[0m."
  ltt=$lst
  lst=$lma
  lma=$ltt
fi
mrr=$((mar*2))
if [[ mar -le 0 ]]; then mrr=2; fi
if [[ mar -eq -2 ]]; then mrr=1; fi
dw "Queries: search: \"\e[33m$que\e[0m\", filter: \"\e[32m$fq\e[0m\""
cache=""
pl=0
ok=0
for ((i=$lst; i<=$lma; i++)); do
  qed=""
  fqq="${fq/\$i/$i}"
  for ((p=1; p!=$pma; p++)); do
    if [[ $p -ne 1 ]]; then
      dw "Loading page: \e[33m[$p]\e[0m for \e[32m{LOOP:$i}\e[0m..."
    fi
    if [[ $cmode -eq 1 ]]; then
      cfqq="$fqq"
      dw "Using \e[31mCache\e[0m mode..."
      if [[ $zp -eq 1 ]]; then
        dw "And zero-prefix..."
        cfqq="${fq/\$i/0$i}"
      fi
      if [[ "$cache" == "" ]] || [[ $p -ne $pl ]] && [[ $ok -eq 0 ]]; then
        dw "Cache update: +page$p"
        cachep=$(cuss $myvi "$que" $p)
        cache="$cache$cachep"
      fi
      qed=$(echo "$cache" | grep -iP -A1 "${cfqq}" | head -n$mrr)
      if [[ "$qed" == "" ]]; then
        dw "$FA"
        if [[ $zp -eq 0 ]]; then
          dw "Retry with: zero-prefix..."
          cfqq="${fq/\$i/0$i}"
          qed=$(echo "$cache" | grep -iP -A1 "${cfqq}" | head -n$mrr)
          if [[ "$qed" == "" ]]; then dw "$FA"; else dw "$SU"; break; fi
        fi
        if [[ "$qed" == "" ]]; then ok=0; fi
      else
        dw "$SU"
        ok=1
        break
      fi
    fi
    if [[ $fc -eq 1 ]]; then
      dw "skip: $p: forced cache mode"
      continue
    fi
    if [[ $zp -eq 0 ]]; then
      dw "Using \e[36mBase\e[0m mode..."
      qed=$(cuss $myvi "$que $i" $p | grep -iP -A1 "${fqq}" | head -n$mrr)
    fi
    if [[ "$qed" == "" ]]; then
      if [[ $i -lt 10 ]] && [[ $i -gt -1 ]]; then
        dw "$FA"
        fqq="${fq/\$i/0$i}"
        dw "Using \e[32mLeading-Zero-Fix(zero-prefix)\e[0m \e[34mfix\e[0m: \"\e[35m$que 0$i\e[0m\", \"\e[36m$fqq\e[0m\"."
        qed=$(cuss $myvi "$que 0$i" $p | grep -iP -A1 "${fqq}" | head -n$mrr)
      fi
    fi
    if [[ "$qed" == "" ]]; then
      dw "$FA"
      dw "Using \e[35mNO-INDEX\e[0m search mode..."
      qed=$(cuss $myvi "$que" $p | grep -iP -A1 "${fqq}" | head -n$mrr)
    fi
    if [[ "$qed" != "" ]]; then 
      dw "$SU"
      break
    fi
    pl=$p
  done
  if [[ "$qed" != "" ]]; then
    if [[ $mar -eq -1 ]]; then
      echo "$qed" | grep -iP "^http"
    else 
      echo "$qed"
    fi
  else
    echo "Unfortunately, no results for [$que $i]..."
  fi
done
